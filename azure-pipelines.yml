# Nombre de la pipeline
name: Pipeline de Pruebas Serenity Selenium

# Triggers para iniciar la pipeline al hacer push al repositorio
trigger:
  batch: true
  branches:
    include:
    - main
    
# Variables para la configuración
variables:
  mavenPomFile: 'pom.xml'
  testResultsDirectory: '$(System.DefaultWorkingDirectory)/target/site/serenity'
  codeCoverageTool: 'Cobertura'
  codeCoverageReportFile: '$(System.DefaultWorkingDirectory)/target/site/cobertura/coverage.xml'

# Agent Job para la pipeline
jobs:
- job: Ejecutar_Pruebas_Serenity_Selenium
  displayName: 'Ejecutar pruebas de Serenity Selenium'
  pool:
    vmImage: 'ubuntu-latest'
  steps:

  - task: Maven@3
    displayName: 'Maven clean and verify'
    inputs:
      mavenPomFile: $(mavenPomFile)
      goals: 'clean verify'
      options: '-Xmx3072m'

  - task: PublishTestResults@2
    displayName: 'Publicar resultados de pruebas'
    inputs:
      testRunner: 'JUnit'
      testResultsFiles: $(testResultsDirectory)/TEST-*.xml
      mergeTestResults: true
      testRunTitle: 'Pruebas de Serenity Selenium'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publicar resultados de cobertura de código'
    inputs:
      codeCoverageTool: $(codeCoverageTool)
      summaryFileLocation: $(codeCoverageReportFile)
      reportDirectory: '$(System.DefaultWorkingDirectory)/target/site/cobertura'
      failIfCoverageEmpty: true